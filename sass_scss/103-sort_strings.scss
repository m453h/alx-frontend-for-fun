/* Sort strings */

@import '103-sort_list';

@function compare-strings($a, $b) {
    $order:
    "a" "b" "c" "d" "e" "f" 
    "g" "h" "i" "j" "k" "l"
    "m" "n" "o" "p" "q" "r" 
    "s" "t" "u" "v" "w" "x" 
    "y" "z";
    
    $a: to-lower-case($a + unquote(""));
    $b: to-lower-case($b + unquote(""));
  
    @for $i from 1 through min(str-length($a), str-length($b)) {
      $char-a: str-slice($a, $i, $i);
      $char-b: str-slice($b, $i, $i);
  
      @if $char-a and $char-b and index($order, $char-a) != index($order, $char-b) {
        @return index($order, $char-a) < index($order, $char-b);
      }
    }
  
    @return str-length($a) < str-length($b);
}

@function bubble-sort($names) {
    $n: length($names);
  
    @for $i from 1 through $n {
      $swapped: false;
  
      @for $j from 1 through $n - $i {
        $item-a: nth($names, $j);
        $item-b: nth($names, $j + 1);
  
        @if compare-strings($item-b, $item-a) {
          $names: set-nth($names, $j, $item-b);
          $names: set-nth($names, $j + 1, $item-a);
          $swapped: true;
        }
      }
  
      @if not $swapped {
        @return $names;
      }
    }
  
    @return $names;
}

$sorted_list: bubble-sort($list_to_sort);
@debug "#{$sorted_list}";
